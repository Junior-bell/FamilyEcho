{"ast":null,"code":"var _jsxFileName = \"D:\\\\FamilyEcho\\\\src\\\\context\\\\FamilyContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FamilyContext = /*#__PURE__*/createContext();\n\n// Sample data structure\nconst initialState = {\n  members: [],\n  memories: [],\n  familyTree: {\n    nodes: [],\n    links: []\n  },\n  loading: false,\n  error: null\n};\nconst familyReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'ADD_MEMBER':\n      return {\n        ...state,\n        members: [...state.members, action.payload]\n      };\n    case 'UPDATE_MEMBER':\n      return {\n        ...state,\n        members: state.members.map(member => member.id === action.payload.id ? action.payload : member)\n      };\n    case 'ADD_MEMORY':\n      return {\n        ...state,\n        memories: [...state.memories, action.payload]\n      };\n    case 'UPDATE_MEMORY':\n      return {\n        ...state,\n        memories: state.memories.map(memory => memory.id === action.payload.id ? action.payload : memory)\n      };\n    case 'SET_MEMBERS':\n      return {\n        ...state,\n        members: action.payload\n      };\n    case 'SET_MEMORIES':\n      return {\n        ...state,\n        memories: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const FamilyProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(familyReducer, initialState);\n\n  // Simulate API calls\n  const addMember = async memberData => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const newMember = {\n        ...memberData,\n        id: Math.max(...state.members.map(m => m.id)) + 1,\n        memories: []\n      };\n      dispatch({\n        type: 'ADD_MEMBER',\n        payload: newMember\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const addMemory = async memoryData => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const newMemory = {\n        ...memoryData,\n        id: Math.max(...state.memories.map(m => m.id)) + 1\n      };\n      dispatch({\n        type: 'ADD_MEMORY',\n        payload: newMemory\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const getMemberById = id => {\n    return state.members.find(member => member.id === parseInt(id));\n  };\n  const getMemoriesByMemberId = memberId => {\n    return state.memories.filter(memory => memory.memberIds.includes(parseInt(memberId)));\n  };\n  const searchMembers = query => {\n    return state.members.filter(member => member.name.toLowerCase().includes(query.toLowerCase()) || member.relationship.toLowerCase().includes(query.toLowerCase()));\n  };\n  const searchMemories = query => {\n    return state.memories.filter(memory => memory.title.toLowerCase().includes(query.toLowerCase()) || memory.description.toLowerCase().includes(query.toLowerCase()) || memory.tags.some(tag => tag.toLowerCase().includes(query.toLowerCase())));\n  };\n  const value = {\n    ...state,\n    addMember,\n    addMemory,\n    getMemberById,\n    getMemoriesByMemberId,\n    searchMembers,\n    searchMemories,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(FamilyContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(FamilyProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = FamilyProvider;\nexport const useFamily = () => {\n  _s2();\n  const context = useContext(FamilyContext);\n  if (!context) {\n    throw new Error('useFamily must be used within a FamilyProvider');\n  }\n  return context;\n};\n_s2(useFamily, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FamilyProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","FamilyContext","initialState","members","memories","familyTree","nodes","links","loading","error","familyReducer","state","action","type","payload","map","member","id","memory","FamilyProvider","children","_s","dispatch","addMember","memberData","Promise","resolve","setTimeout","newMember","Math","max","m","message","addMemory","memoryData","newMemory","getMemberById","find","parseInt","getMemoriesByMemberId","memberId","filter","memberIds","includes","searchMembers","query","name","toLowerCase","relationship","searchMemories","title","description","tags","some","tag","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFamily","_s2","context","Error","$RefreshReg$"],"sources":["D:/FamilyEcho/src/context/FamilyContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst FamilyContext = createContext();\r\n\r\n// Sample data structure\r\nconst initialState = {\r\n  members: [],\r\n  memories: [],\r\n  familyTree: {\r\n    nodes: [],\r\n    links: []\r\n  },\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst familyReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    case 'SET_ERROR':\r\n      return { ...state, error: action.payload };\r\n    case 'ADD_MEMBER':\r\n      return { ...state, members: [...state.members, action.payload] };\r\n    case 'UPDATE_MEMBER':\r\n      return {\r\n        ...state,\r\n        members: state.members.map(member =>\r\n          member.id === action.payload.id ? action.payload : member\r\n        )\r\n      };\r\n    case 'ADD_MEMORY':\r\n      return { ...state, memories: [...state.memories, action.payload] };\r\n    case 'UPDATE_MEMORY':\r\n      return {\r\n        ...state,\r\n        memories: state.memories.map(memory =>\r\n          memory.id === action.payload.id ? action.payload : memory\r\n        )\r\n      };\r\n    case 'SET_MEMBERS':\r\n      return { ...state, members: action.payload };\r\n    case 'SET_MEMORIES':\r\n      return { ...state, memories: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const FamilyProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(familyReducer, initialState);\r\n\r\n  // Simulate API calls\r\n  const addMember = async (memberData) => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    try {\r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      const newMember = {\r\n        ...memberData,\r\n        id: Math.max(...state.members.map(m => m.id)) + 1,\r\n        memories: []\r\n      };\r\n      dispatch({ type: 'ADD_MEMBER', payload: newMember });\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n    } finally {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const addMemory = async (memoryData) => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      const newMemory = {\r\n        ...memoryData,\r\n        id: Math.max(...state.memories.map(m => m.id)) + 1\r\n      };\r\n      dispatch({ type: 'ADD_MEMORY', payload: newMemory });\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n    } finally {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const getMemberById = (id) => {\r\n    return state.members.find(member => member.id === parseInt(id));\r\n  };\r\n\r\n  const getMemoriesByMemberId = (memberId) => {\r\n    return state.memories.filter(memory => \r\n      memory.memberIds.includes(parseInt(memberId))\r\n    );\r\n  };\r\n\r\n  const searchMembers = (query) => {\r\n    return state.members.filter(member =>\r\n      member.name.toLowerCase().includes(query.toLowerCase()) ||\r\n      member.relationship.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const searchMemories = (query) => {\r\n    return state.memories.filter(memory =>\r\n      memory.title.toLowerCase().includes(query.toLowerCase()) ||\r\n      memory.description.toLowerCase().includes(query.toLowerCase()) ||\r\n      memory.tags.some(tag => tag.toLowerCase().includes(query.toLowerCase()))\r\n    );\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    addMember,\r\n    addMemory,\r\n    getMemberById,\r\n    getMemoriesByMemberId,\r\n    searchMembers,\r\n    searchMemories,\r\n    dispatch\r\n  };\r\n\r\n  return (\r\n    <FamilyContext.Provider value={value}>\r\n      {children}\r\n    </FamilyContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFamily = () => {\r\n  const context = useContext(FamilyContext);\r\n  if (!context) {\r\n    throw new Error('useFamily must be used within a FamilyProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}